CC = g++

#-----------------------------------------------
# Uncomment exactly one of the lines labelled (A), (B), and (C) below
# to switch between compilation modes.

OPT = -Wall -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -g -rdynamic
DEBUG ?= 1
ifeq "${DEBUG}" "1"
OPT += -DDEBUG_TIME
else
OPT += -O2 -DNDEBUG
endif

#OPT = -O2 -DNDEBUG       # (A) Production use (optimized mode)
# OPT = -g2              # (B) Debug mode, w/ full line-level debugging symbols
# OPT = -O2 -g2 -DNDEBUG # (C) Profiling mode: opt, but w/debugging symbols
#-----------------------------------------------

# detect what platform we're building on
$(shell sh ./build_detect_platform)
# this file is generated by build_detect_platform to set build flags
include build_config.mk

CFLAGS = -I. -I./include -D_FILE_OFFSET_BITS=64 $(PORT_CFLAGS) $(PLATFORM_CFLAGS) $(OPT)

LDFLAGS=$(PLATFORM_LDFLAGS) -static
CFLAGS += $(shell pkg-config --cflags json-c)
LDFLAGS += $(shell pkg-config --libs json-c)

CPPFLAGS = $(CFLAGS)
LIBS = -luv -lhiredis
LIBO = searchd

all	: $(LIBO)

searchd : main.o server.o core.o
	$(CC) -o $@ $^ $(CPPFLAGS) $(LDFLAGS) $(LIBS)

.PHONY : clean cleanall tags

tags:
	@ctags *.h *.c*

clean:
	@rm -f *.o *~ $(LIBO)
cleanall: clean
	@rm -f tags build_config.mk
